<template>
	<view class="minh100">
		<map class="index_map" id="map" name="map" ref="map1" :show-compass="false" :style="{width:mapWidth+'px',height: mapHeight+'px'}"
		 :enable-rotate="false" :latitude="latitude" :longitude="longitude" :markers="markersArr" @markertap="markertap"
		 :controls="wheight" @regionchange='mapChange' @anchorpointtap="getbj">
			<view class="map_search_box">
				<input class="map_search_int" type="text" placeholder="请输入" v-model="add_str" @input="search_add">
				<text @click="add_str=''" class="iconfont iconguanbi" style="font-size: 30px;color: #333;">&#xe604;</text>
			</view>
			<view class="map_search_btn" @click="add_bj"><text style="font-size: 30px;color: #fff;">保存标记</text></view>

			<!-- 警报组件 -->
			<view v-if="hasLogin" class="bj_box">
				<image @click="baojing_fuc" class="bj_box_img" src="../../static/images/baojing1.png" mode="aspectFit"></image>
				<view v-if="baojing" @click="baojing_del" class="bj_main">

					<view class="bj_cnum">
						<view class="bj_cnum_1">
							<text class="bj_cnum_num">{{bj_time}}</text>
						</view>
					</view>
					<text class="bj_tip" style="color: #fff;">10秒钟内触摸屏幕取消</text>
				</view>
			</view>
		</map>



	</view>
</template>

<script>
	import Vue from 'vue'
	import service from '../../service.js';
	import {
		mapState,
		mapMutations
	} from 'vuex'
	var that, mapContext, mapEndloading;
	var djs_fuc
	var djs_fuc1
	var that
	var dw_time
	import torch from "@/common/dc-torch/torch.js"
	const domModule = weex.requireModule('dom');
	let mapSearch = weex.requireModule('mapSearch')
	domModule.addRule('fontFace', {
		'fontFamily': "iconfont",
		'src': "url('../../static/fonts/iconfont.ttf')"
	});
	export default {
		data() {
			return {
				"latitude": 39.982205,
				"longitude": 116.314323,
				mapWidth: 0, //地图区域宽度
				mapHeight: 0, //地图区域高度
				centerTop: 0, //中心图片坐标
				centerLeft: 0, //中心图片坐标
				translateY: 165,
				markersArr1:[],
				markersArr1: [{
					"latitude": 39.909,
					"longitude": 116.39742,
					"iconPath": "/static/images/huozai.png"
				}, {
					"latitude": 39.919,
					"longitude": 116.39742,
					"iconPath": "/static/images/huozai.png"
				}, {
					"latitude": 39.975643747304986,
					"longitude": 116.314328,
					"iconPath": "/static/images/huozai.png"
				}, {
					"latitude": 39.94254855057598,
					"longitude": 116.314328,
					"iconPath": "/static/images/huozai.png"
				}], //覆盖物
				mapControls1: [],
				mapControls: '', //地图中的控件
				




				tk_show: false,
				tk_show1: false,
				tk_show1_num: 0,
				note_time_t: '',
				tk_show1_cur: -1,
				add_str: '',
				
				
				zb_bz:'',
				zb_img:'',
				zb_title:'',
				
				team_name:'',  //团队名
				time:'',    //时间
				time1:'',   //时间1
				danger_name:'',  //危险类型
				be_num:'',      //生存数
				not_be_num:'',   //遇难数
				
				
				
				
				bj_time:10,
				baojing:false,
				//播放语音相关参数
				AUDIO: uni.createInnerAudioContext(),
				playMsgid:'',
				torch_type:false
			}
		},
		computed: {
			...mapState(['hasLogin', 'forcedLogin', 'userName', 'loginDatas', 'wheight']),
		},
		onLoad(option) {
			that = this
			console.log('that.wheight--------------------------------------->')
			console.log(that.wheight)
			console.log(option)
			that.zb_bz=option.zb_bz||''    //备注
			that.zb_img=option.zb_img
			that.zb_title=option.zb_title
			that.team_name=option.team_name||''  //团队名
			that.time=option.time||''      //时间
			that.time1=option.time1||''    //时间1
			that.danger_name=option.danger_name||''  //危险类型
			that.be_num=option.be_num||''       //生存数
			that.not_be_num=option.not_be_num||''   //遇难数
			that.search_type=option.search_type||''   //搜索状态
			
			
			
			this.AUDIO.src = '/static/music/jingbao_kong.mp3';
			this.AUDIO.loop=true
			//音频进入可以播放状态，但不保证后面可以流畅播放
			this.AUDIO.onCanplay((res) => {
				console.log('音频进入可以播放状态，但不保证后面可以流畅播放')
				
			});
			//音频播放
			this.AUDIO.onPlay((res) => {
				console.log('音频播放')
				uni.vibrateLong({
				    success: function () {
				        console.log('success');
				    }
				});
				torch.on();
				that.torch_type=true
				djs_fuc=setInterval(function () {
					
				  if(that.torch_type==true){
						torch.off();
						that.torch_type=false
					}else{
						torch.on();
						that.torch_type=true
					}
					
				  // console.log(that.djs())
				}, 100);
				djs_fuc1=setInterval(function () {
					uni.vibrateLong({
					    success: function () {
					        console.log('success');
					    }
					});
				}, 1000);
			});
			//音频停止
			this.AUDIO.onStop((res) => {
				console.log('音频停止')
				clearInterval(djs_fuc)
				clearInterval(djs_fuc1)
				torch.off();
				that.torch_type=true
			});
			//语音自然播放结束
			this.AUDIO.onEnded((res) => {
				console.log('语音自然播放结束')
				this.playMsgid = null;
			});
			/*that.mapControls=[
					{
						id: "1",
						position: {
							left: 750 / 2 - 28,
							top: that.wheight - 68,
							width: 55,
							height: 68
						},
						iconPath: "/static/images/huozai.png",
						clickable: false
					}
				]*/
			// #ifdef APP-PLUS
			this.getLocation();
			// #endif
			/*const innerAudioContext = uni.createInnerAudioContext();
			innerAudioContext.autoplay = true;
			innerAudioContext.src = 'https://vkceyugu.cdn.bspapp.com/VKCEYUGU-hello-uniapp/2cc220e0-c27a-11ea-9dfb-6da8e309e0d8.mp3';
			innerAudioContext.onPlay(() => {
			  console.log('开始播放');
			});
			innerAudioContext.onError((res) => {
			  console.log(res.errMsg);
			  console.log(res.errCode);
			});*/

			mapContext = uni.createMapContext('map', this);
		},
		onHide() {
			that.btn_kg=0
			that.show_count++
			clearInterval(djs_fuc)
			clearInterval(djs_fuc1)
			torch.off();
			that.torch_type=true
		},
		mounted() {

			that.mapWidth = 750
			console.log(uni.getSystemInfoSync())
			that.sHeight = uni.getSystemInfoSync().statusBarHeight;
			that.mapHeight = (uni.getSystemInfoSync().windowHeight - uni.getSystemInfoSync().statusBarHeight);
			uni.getSystemInfo({
				success: function(res) {
					// that.mapHeight = res.windowHeight;
					// console.log(that.height);
				}
			});
			console.log(that.mapHeight)
			console.log(uni.getSystemInfoSync().screenHeight)
			that.getSize()
		},
		methods: {
			...mapMutations(['setAddress']),
			// 播放语音
			playVoice(msg) {
					this.AUDIO.play();
			},
			baojing_fuc(){
				var that=this
				this.baojing=true
				that.bj_time=10
				djs_fuc=setInterval(function () {
				  if(that.bj_time==0){
						// uni.showToast({
						// 	icon:'none',
						// 	title:'警报操作'
						// })
						console.log(0)
						
						clearInterval(djs_fuc)
						that.bj_time='!'
						that.playVoice()
					}else{
						that.bj_time--
					}
				  // console.log(that.djs())
				}, 1000);
			},
			baojing_del(){
				var that=this
				clearInterval(djs_fuc)
				this.bj_time=10
				this.baojing=false
				this.AUDIO.stop();
			},
			
			test() {},
			add_bj() {
				var data = {
					token:that.$store.state.loginDatas.token,
					latitude: that.latitude,
					longitude: that.longitude,
					iconPath: that.zb_img,
					comment:that.zb_bz,
					type_name:that.zb_title,
					
					team_name:that.team_name,  //团队名
					enter_time:that.time,    //时间
					evacuate_time:that.time1,   //时间1
					hazard_type:that.danger_name,  //危险类型
					survivor:that.be_num,      //生存数
					victim:that.not_be_num,   //遇难数
					search_state:that.search_type, //搜索状态
				}
				console.log(data)
				if(that.btn_kg==1){
					return
				}
				that.btn_kg=1
				//selectSaraylDetailByUserCard
				var jkurl = '/minapp/store-position'
				uni.showLoading({
					title: '正在设置'
				})
				
				service.P_post(jkurl, data).then(res => {
					that.btn_kg = 0
					console.log(res)
					if (res.code == 1) {
						var datas = res.data
						console.log(typeof datas)
							
						if (typeof datas == 'string') {
							datas = JSON.parse(datas)
						}
						uni.showToast({
							icon: 'none',
							title: '添加成功'
						})
						setTimeout(()=>{
							uni.navigateBack({
								delta:1
							})
						},1000)
					} else {
						if (res.msg) {
							uni.showToast({
								icon: 'none',
								title: res.msg
							})
						} else {
							uni.showToast({
								icon: 'none',
								title: '获取失败'
							})
						}
					}
				}).catch(e => {
					that.btn_kg = 0
					console.log(e)
					uni.showToast({
						icon: 'none',
						title: '获取数据失败'
					})
				})
				
				return
				var news_arr = that.markersArr
				var _marklList = news_arr.filter(item => {
					return true

				})
				_marklList.push(new_add)
				that.markersArr = _marklList
				console.log(that.markersArr)
				
			},
			getbj(e){
				console.log('getbj------------------------------------------------>')
				console.log(e)
			},
			getSize() {
				const query = uni.createSelectorQuery().in(this);
				query.select('#map').boundingClientRect(data => {
					var _navHeight = data.height;
					console.log('_navHeight------------------------------------>')
					console.log(_navHeight)
					_navHeight = _navHeight / 2
					var sss = [{
						id: "1",
						position: {
							left: 750 / 2 - 28,
							top: _navHeight - 68,
							width: 55,
							height: 68
						},
						// iconPath: "/static/images/huozai.png",
						iconPath:that.zb_img,
						clickable: false
					}]
					that.mapControls=sss
					// Vue.set(that.mapControls[0].position,'top',sss)
					console.log(that.mapControls)
				}).exec();
			},
			poiSearchNearBy() {
				// var point = this.markers[0]
				mapSearch.poiSearchNearBy({
					point: {
						latitude: that.latitude,
						longitude: that.longitude
					},
					key: that.add_str,
					radius: 10000000
				}, ret => {

					console.log(ret);
					uni.showModal({
						content: JSON.stringify(ret)
					})
					that.longitude = ret.poiList[0].location.longitude;
					that.latitude = ret.poiList[0].location.latitude;
				})
			},
			search_add() {
				clearInterval(dw_time)
				clearTimeout('重新计算')
				dw_time = setTimeout(function() {
					var kw = that.add_str
					console.log(kw.length)
					if (kw.length > 0) {

						that.poiSearchNearBy()

					} else {
						that.poiSearchNearBy()
						// that.qy_show = that.qy_arr3
					}
				}, 1000)
			},
			open_tk(num) {
				that.tk_show = false
				that.tk_show1 = true
				that.tk_show1_num = num

				var now_time = new Date();
				var now_year = now_time.getFullYear();
				var now_month = now_time.getMonth() + 1;
				var now_date = now_time.getDate();
				var hour = now_time.getHours();
				var minute = now_time.getMinutes();
				if (now_month < 10) {
					now_month = '0' + now_month * 1
				}
				if (now_date < 10) {
					now_date = '0' + now_date * 1
				}
				if (hour < 10) {
					hour = '0' + hour * 1
				}
				if (minute < 10) {
					minute = '0' + minute * 1
				}
				that.note_time_t = now_year + '-' + now_month + '-' + now_date + ' ' + hour + ':' + minute
			},
			//地图点击事件
			markertap(e) {
				var _id = e.detail.markerId,
					_index;
				var _list = that.markersArr;
				for (var i = 0; i < _list.length; i++) {
					if (_list[i].id == _id) {
						_index = i;
						that.current = i;
						that.openAnimation();
						break;
					}
				};
			},
			//移动地图结束
			mapChange(e) {
				console.log(e)
				// console.log(mapEndloading)
				// if (e) {
				// 	return
				// }

				if (mapEndloading) {
					return;
				}
				/*mapEndloading = true;
				setTimeout(() => { //防抖
					mapEndloading = false;
				}, 500);
				clearTimeout(dw_time)
				clearInterval(dw_time)
				clearTimeout('重新计算')
				dw_time = setTimeout(function() {
					if (e.detail.type == 'end' || e.type == 'end') {
						console.log('中心区')
						console.log(mapContext)
						//中心区域左边
						mapContext.getCenterLocation({
							success(res) {
								console.log('success')
								that.mapEnd(res);
							},
							fail(err) {
								console.log('fail')
								console.log(err)
							}
						});
					}
				}, 1000)
				return*/
				mapEndloading = true;
				setTimeout(() => { //防抖
					mapEndloading = false;
				}, 500);
				if (uni.getSystemInfoSync().platform == 'ios' && e.detail.type == 'end' || e.type == 'end') {
					console.log('中心区')
					//中心区域左边
					mapContext.getCenterLocation({
						success(res) {
							that.mapEnd(res);
						},
						fail(err) {
							console.log(err)
						}
					});
				}
				return;
				if (uni.getSystemInfoSync().platform == 'ios') {
					if (e.detail.type == 'end') {
						//中心区域左边
						mapContext.getCenterLocation({
							success(res) {
								that.mapEnd(res);
							},
							fail(err) {
								console.log(err)
							}
						});
					}
				} else {
					//地图移动结束
					console.log(e)
					if (e.type == 'end') {
						//中心区域左边
						mapContext.getCenterLocation({
							success(res) {

								that.mapEnd(res);
							},
							fail(err) {
								console.log(err)
							}
						});
						//缩放视野展示所有经纬度
						// mapContext.getCenterLocation({
						// 	success(res) {
						// 		console.log(res);
						// 	},
						// 	fail(err) {
						// 		console.log(err)
						// 	}
						// })
						//获取当前地图的视野范围
						mapContext.getRegion({
							success(res) {
								// console.log(res);
							},
							fail(err) {
								console.log(err)
							}
						})
						//获取当前地图的缩放级别
						mapContext.getScale({
							success(res) {
								// console.log(res);
							},
							fail(err) {
								console.log(err)
							}
						})
					}
				}


			},
			getList() {},
			//地图移动
			mapEnd(res) {
				console.log('加载数据')
				if (res) {
					that.longitude = res.longitude;
					that.latitude = res.latitude;
				}

				//原数据
				that.list = [];
				that.pageIndex = 1;
				that.chaceList = [];
				// 覆盖物数据
				// that.markersArr = [];
				that.originalList = [];
				that.getList();

			},
			getLocation(type) {


				uni.getLocation({
					// type: 'wgs84',
					type: 'gcj02',
					success: function(res) {
						console.log(res.longitude)
						console.log(res.latitude)
						that.longitude = res.longitude;
						that.latitude = res.latitude;
						that.pageIndex = 1;
						// if (type != 'back') {

						that.setAddress(res);
						setTimeout(() => {
							that.getList();
						}, 1000)
						// }

					},
					fail(err) {
						if (uni.getSystemInfoSync().platform == 'ios') {
							if (!permision.judgeIosPermission('location')) {
								uni.showModal({
									title: '提示',
									content: '需要打开定位权限',
									success: function(res) {
										if (res.confirm) {
											that.isToSetting = true;
											permision.gotoAppPermissionSetting();
										}
									}
								});
							}
						} else {
							that.requestAndroidPermission('android.permission.ACCESS_FINE_LOCATION');
						}

					}
				});
			},
			async requestAndroidPermission(permisionID) {
				var result = await permision.requestAndroidPermission(permisionID)
				var strStatus
				if (result == 1) {
					strStatus = "已获得授权"
				} else if (result == 0) {
					strStatus = "未获得授权"
				} else {
					strStatus = "被永久拒绝权限"
				}
				uni.showModal({
					title: '提示',
					content: '需要打开定位权限',
					success: function(res) {
						if (res.confirm) {
							that.isToSetting = true;
							permision.gotoAppPermissionSetting();
						}
					}
				});
			},
			getimg(img) {
				return service.getimg(img)
			},
			jump_fuc(e) {
				if (that.tk_show1_cur == -1) {
					uni.showToast({
						icon: 'none',
						title: '请选择类型'
					})
					return
				}
				uni.navigateTo({
					url: '/pages/map_dw/map_dw?tk_show1_cur=' + that.tk_show1_cur + '&tk_show1_num=' + that.tk_show1_num
				})
			},
			jump(e) {
				var that = this

				if (that.btn_kg == 1) {
					return
				} else {
					that.btn_kg = 1
					setTimeout(function() {
						that.btn_kg = 0
					}, 1000)
				}

				service.jump(e)
			},
		}
	}
</script>

<style scoped>
	.iconfont {
		font-family: iconfont;
	}

	.minh100 {
		width: 750px;
		/* #ifdef H5 */
		min-height: calc(100vh - 100upx);
		/* #endif */
	}

	.index_map {
		/* position: fixed; */

		width: 750px;
		flex: 1;
		/*  #ifndef APP-PLUS-NVUE  */
		height: calc(100vh - 246upx);
		/*  #endif  */

		/* #ifdef H5 */
		max-width: 100vw;
		max-height: calc(100vh - 100upx);
		height: calc(100vh - 246upx - 100upx);
		/* #endif */
	}

	.map_search_box {
		width: 690upx;
		height: 107upx;
		background-color: #FFFFFF;
		box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
		border-radius: 4px;
		position: relative;
		top: 30upx;
		left: 30upx;
		flex-direction: row;
		align-items: center;
		padding: 0 30px;
	}

	.map_search_int {
		flex: 1;
		font-size: 32upx;
		color: #333;
	}

	.map_search_btn {
		width: 624upx;
		height: 86upx;
		background-color: #609AEC;
		border-radius: 4px;
		/*  #ifndef APP-PLUS-NVUE  */
		display: flex;
		/*  #endif  */
		align-items: center;
		justify-content: center;
		position: absolute;
		bottom: 50upx;
		left: 60upx;
		font-size: 30upx;
		color: #FFFFFF;
	}


	.bj_box {
		position: fixed;
		bottom: 230upx;
		right: 30upx;
		z-index: 999998;
		width: 114upx;
		height: 114upx;
		background-color: #FFFFFF;
		box-shadow: 0px 0px 21upx 0px rgba(0, 0, 0, 0.16);
		border-radius: 50%;
	}

	.bj_box_img {
		width: 114upx;
		height: 114upx;
	}

	.bj_main {
		position: fixed;
		top: 0;
		left: 0;
		bottom: 0;
		width: 750px;
		/* height: 100vh; */
		background-color: rgba(0, 0, 0, .8);
		z-index: 999999;
		/*  #ifndef APP-PLUS-NVUE  */
		/*  #ifndef APP-PLUS-NVUE  */
		display: flex;
		/*  #endif  */
		/*  #endif  */
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}

	.bj_cnum {
		width: 508upx;
		height: 508upx;
		background-color: #FF0000;
		border-radius: 508upx;
		padding: 36upx;
		margin-bottom: 50upx;
	}

	.bj_cnum_1 {
		width: 436px;
		height: 436px;
		background-color: #FF0000;
		/* border: 4upx solid #FFFFFF; */
		border-color:  #FFFFFF;
		border-style: solid;
		border-width: 4px;
		border-radius: 436px;
		/*  #ifndef APP-PLUS-NVUE  */
		display: flex;
		/*  #endif  */
		align-items: center;
		justify-content: center;
	}

	.bj_cnum_num {
		font-size: 300rpx;
		font-family: DIN;
		font-weight: 500;
		color: #FFFFFF;
	}

	.bj_tip {
		font-size: 30upx;
		color: #fff;
	}
</style>
